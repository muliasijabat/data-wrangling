# -*- coding: utf-8 -*-
"""data-wrangling.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/11OHMzPzNoId3Mj3JjfI_nRpDbpElcpbo

# Import Library
"""

import numpy as np
import pandas as pd
import seaborn as sns
import matplotlib.pyplot as plt

"""# Data Wrangling"""

customers_df = pd.read_csv("https://raw.githubusercontent.com/dicodingacademy/dicoding_dataset/main/DicodingCollection/customers.csv")
customers_df.head()

orders_df = pd.read_csv("https://raw.githubusercontent.com/dicodingacademy/dicoding_dataset/main/DicodingCollection/orders.csv")
orders_df.head()

product_df = pd.read_csv("https://raw.githubusercontent.com/dicodingacademy/dicoding_dataset/main/DicodingCollection/products.csv")
product_df.head()

sales_df = pd.read_csv("https://raw.githubusercontent.com/dicodingacademy/dicoding_dataset/main/DicodingCollection/sales.csv")
sales_df.head()

"""# Assessing Data

## Customer
"""

customers_df.info()

"""Gender terdapat null 18"""

customers_df.isna().sum()

print("Jumlah duplikasi: ", customers_df.duplicated().sum())

customers_df.describe()

"""Pada kolom 'age' terdapat ke anehan dimana maksimal umur adalah 700 tahun. ??

## Order
"""

orders_df.info()

"""order_date dan delivery_date > tipe datanya salah"""

orders_df.isna().sum()

orders_df.duplicated().sum()

orders_df.describe()

"""tidak ada duplicated data ataupun keanehan pada nilai orders_df

## Product
"""

product_df.info()

product_df.isna().sum()

print('Data terduplikat', product_df.duplicated().sum())

product_df.describe()

"""Terdapat data terduplikat 6
tidak ada keanehan pada nilai.

## Sales
"""

sales_df.info()

sales_df.isna().sum()

"""Terdapat 19 missing value pada kolom total_price"""

print('Data terdupliakt', sales_df.duplicated().sum())

sales_df.describe()

Tidak ada data terduplikat atau keanehan pada nilai

"""# Cleaning Data

## Customer

### Duplikat
"""

customers_df.drop_duplicates(inplace=True)

print("Jumlah duplikasi: ", customers_df.duplicated().sum())

"""### Missing Value"""

# Menampilkan kolom yang mengandung missing value

customers_df[customers_df.gender.isna()]

"""Baris data tersebut masih mengandung banyak informasi penting sehingga sayang jika langsung dibuang. Oleh karena itu, pada kasus ini, kita akan menggunakan **metode imputation** untuk menangani missing value."""

# melihat nilai yang dominan
customers_df.gender.value_counts()

"""Diketahui bahwa data terbanyak adalah **Prefer not to say**, oleh sebab itu kita mengubah Nilai NaN menjadi data tersebut."""

customers_df.fillna(value="Prefer not to say", inplace=True)

customers_df.isna().sum()

"""### Menangani inaccurate value"""

customers_df[customers_df.age == customers_df.age.max()]

# mengubah 700 menjadi 70
customers_df.age.replace(customers_df.age.max(), 70, inplace=True)

customers_df[customers_df.age == customers_df.age.max()]

customers_df.age.replace(customers_df.age.max(), 50, inplace=True)

customers_df[customers_df.age == customers_df.age.max()]

"""Kemudia untuk memastikan kembali kita .describe lagi untuk melihat nilai dari data tersebut."""

customers_df.describe()

"""## Order

### Tipe Data
"""

orders_df.columns

date_columns = orders_df[[ 'order_date', 'delivery_date']]

for column in date_columns :
  orders_df[column] = pd.to_datetime(orders_df[column])

orders_df.info()

"""## Product

## Duplikat
"""

product_df.drop_duplicates(inplace=True)
print('Data terduplikat', product_df.duplicated().sum())

"""## Sales

### Missing Value
"""

sales_df[sales_df.total_price.isna()]

""" total_price merupakan hasil perkalian antara price_per_unit dan quantity. Kita dapat menggunakan pola ini untuk menangani missing value pada kolom total_price."""

sales_df['total_price'] = sales_df['price_per_unit'] * sales_df['quantity']

sales_df.isna().sum()